@using ChartJs.Blazor.PieChart
@using System.Drawing
@using TKW.AdminPortal.Components.SharedComponents
@using AdminPortal.Shared.Models
@inject HttpClient httpclient

@if (PaymentMethodCountmodel!= null)
{
    <div class="mb-3">
        <h6 class="fw-bold text-secondary small">Payment Method & Amount</h6>
        <div class="card rounded-0 border-0" style="box-shadow: 0px 0px 10px rgba(165, 165, 165, 0.25);">
            <div class="card-body">
                <div class="row">
                    <div class="col-5">
                        <div class="position-relative">
                            <Chart Config="_config"></Chart>
                            <div class="position-absolute" style="top: 40%; left: 50%; transform: translate(-50%, 50%);">
                                <span class="fw-bold text-secondary">₹ @PaymentAmountmodel.Cash </span>
                            </div>
                        </div>

                    </div>
                    <div class="col-7 m-auto">
                        <div class="row pb-3">
                            <div class="col-7">
                                <h6 class="mb-0 text-secondary fw-bold small">₹ @PaymentAmountmodel.Cash</h6>
                                <small class="font-weight-light">Total amount by Cash</small>
                            </div>
                            <div class="col-5 m-auto">
                                <small class="fw-bold">Cash(@PaymentMethodCountmodel.Cash)</small>
                            </div>
                        </div>
                        <div class="row pb-3">
                            <div class="col-7">
                                <h6 class="mb-0 text-secondary fw-bold small"> ₹ @PaymentAmountmodel.PaytmWallet</h6>
                                <small>Total amount by Paytm</small>
                            </div>
                            <div class="col-5 m-auto">
                                <small class="fw-bold">Paytm(@PaymentMethodCountmodel.PaytmWallet)</small>
                            </div>
                        </div>
                        @*<div class="row pb-3">
                                <div class="col-7">
                                    <h6 class="mb-0 text-secondary fw-bold small">₹ 7689</h6>
                                    <small>Total amount by Bank</small>
                                </div>
                                <div class="col-5 m-auto">
                                    <small class="fw-bold">Bank(@PaymentMethodCountmodel.UPI)</small>
                                </div>
                            </div>*@
                    </div>
                </div>
            </div>
        </div>
    </div>
    
}


@code {
    private PaymentMethodModel PaymentMethodCountmodel;
    private PaymentMethodModel PaymentAmountmodel;
    private PieConfig _config;

    protected async override void OnAfterRender(bool firstRender)
    {
        PaymentMethodCountmodel = await httpclient.GetFromJsonAsync<PaymentMethodModel>("api/GetpaymentMethodCountsOfFranchise");
        PaymentAmountmodel = await httpclient.GetFromJsonAsync<PaymentMethodModel>("api/GetpaymentMethodAmountOfFranchise");
        base.OnAfterRender(firstRender);

        await LoadPaymentChart();
        StateHasChanged();


    }

    private async Task LoadPaymentChart()
    {
        if (PaymentMethodCountmodel != null)
        {
            _config = new PieConfig(true)
            {


                Options = new PieOptions
                {
                    AspectRatio = 1,
                    MaintainAspectRatio = true,
                    Responsive = true,
                    CutoutPercentage = 75,
                    Legend = new Legend
                    {
                        Display = false,
                        Position = Position.Right
                    },

                    Title = new ChartJs.Blazor.Common.OptionsTitle
                    {
                        Display = false,
                        Text = "ChartJs.Blazor Pie Chart"
                    }


                }
            };

            foreach (string color in new[] { "Cash", "Paytm" })
            {
                _config.Data.Labels.Add(color);
            }

            PieDataset<int> dataset = new PieDataset<int>(new[] {PaymentAmountmodel.Cash,PaymentAmountmodel.PaytmWallet })
            {
                BackgroundColor = new[]
                {
            ColorUtil.ColorString(92, 198, 65, 1), // Slice 1 aka "Red"
            ColorUtil.ColorString(92, 198, 65, 0.1), // Slice 2 aka "Yellow"
            ColorUtil.ColorString(92, 198, 65, 0.5), // Slice 3 aka "Green"

            }
            };

            _config.Data.Datasets.Add(dataset);
        }
    }
}