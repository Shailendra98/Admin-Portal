@using ChartJs.Blazor.PieChart
@using System.Drawing
@using TKW.AdminPortal.Components.SharedComponents
@inject HttpClient http
    <div class="mb-3">
        <small class="fw-bold text-secondary text-uppercase">Customers Today</small>
        <div class="card shadow-sm mt-1">
            <div class="card-body text-center">
                <div class="row mb-3">
                    <div class="col-6 border-right">
                        @if (model != null)
                        {
                            <div> New Customers </div>
                            <h2 class="text-light-green fw-bold"> @model.NewCustomers </h2>
                        }
                        else
                        {
                            <div class="shimmer line"></div>
                            <h2 class="shimmer line h-50"></h2>
                        }

                    </div>
                    <div class="col-6">
                        @if (model != null)
                        {
                            <div> Total Customers </div>
                            <h2 class="text-secondary fw-bold"> @model.TotalCustomers </h2>
                        }
                        else
                        {
                            <div class="shimmer line"></div>
                            <h2 class="shimmer line h-50"></h2>
                        }

                    </div>


                </div>
                @if (model != null) { 
                        float NewCustomerPercent = model.TotalCustomers <= 0 ? 0 : model.NewCustomers * 100 / model.TotalCustomers;
                <div class="progress mb-0" style="height: 0.4rem">
                   @if (NewCustomerPercent == 0) { } else { <div class="progress-bar h-bg-green" role="progressbar" style="width: @NewCustomerPercent%" aria-valuenow="@NewCustomerPercent" aria-valuemin="0" aria-valuemax="100"></div> }
                    
                </div>
                } else { <div class="progress shimmer line mb-0" style="height: 0.4rem"></div>}
            </div>
        </div>
    </div>



@code {
    NewCustomerModel model;
    private PieConfig _config;
    protected async override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            model = await http.GetFromJsonAsync<NewCustomerModel>("api/GetCustomerCount");
            StateHasChanged();
        }

    }
}
