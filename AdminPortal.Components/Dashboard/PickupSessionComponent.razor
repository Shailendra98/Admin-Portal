@inject HttpClient http

<div class="mb-3 w-100">
    <small class="fw-bold text-secondary ml-3 text-uppercase">Pickup Sessions</small>
    <div class="card shadow-sm mt-1">
        @if (model != null)
        {
            @if (model.Count() == 0)
            {
                    <div class="card-body text-center">
                        <h6 class="pb-2">There is no active pickup session.</h6>
                        <a href="/PickupSession" class="btn btn-sm btn-outline btn-primary">
                            Go to Pickup Session
                        </a>
                    </div>
                
            }
            else
            {
                foreach (var a in model)
                {
                        <a href="/PickupSession/Details/@a.Id" class="card-body text-decoration-none">
                            <div class="row">
                                <div class="col-2">
                                    <span class="fw-bold text-secondary mb-0 text-nowrap">@a.VehicleName</span>
                                    <small> @a.VehicleNumber </small>
                                </div>
                                <div class="col-5 d-flex px-0">
                                    <a href="/PickupSession/Details/@a.Id?Tab=pending_request" class="text-center ps-2 text-decoration-none">
                                        <span class="fw-bold text-secondary">@a.PendingRequests </span>
                                        <br />
                                        <small class="ps-1 text-secondary">Pending</small>
                                    </a>
                                    <a href="/PickupSession/Details/@a.Id?Tab=handled_request" class="text-center ps-2 text-decoration-none">
                                        <span class="fw-bold text-light-green">@a.HandledRequests </span>
                                        <br /><small class="ps-1 text-secondary">Completed</small>
                                    </a>
                                    <a href="/PickupSession/Details/@a.Id?Tab=rescheduled_request" class="text-center ps-2 text-decoration-none">
                                        <span class="fw-bold text-info">@a.RescheduledRequests </span>
                                        <br /><small class="ps-1 text-secondary">Rescheduled</small>
                                    </a>
                                    <a href="/PickupSession/Details/@a.Id?Tab=cancelled_request" class="text-center ps-2 text-decoration-none">
                                        <span class="fw-bold text-danger">@a.CancelledRequests </span>
                                        <br />
                                        <small class="ps-1 text-secondary">Cancelled</small>
                                    </a>
                                </div>
                                <div class="col-5 d-flex justify-content-between">
                                    <div>
                                        <h6 class="pt-2 fw-bold">₹ @a.Cash.ToString("G29")</h6>
                                    </div>
                                    <div class="d-flex d-inline-block">
                                        <small class="pt-2 fw-bold">@string.Join(", ", a.PickupBoys.Select(m => m.Name))</small>
                                    </div>

                                </div>

                            </div>
                            @{
                                float totalreq = a.PendingRequests + a.HandledRequests + a.RescheduledRequests + a.CancelledRequests;
                                float handlepercent = totalreq == 0 ? 0 : (a.HandledRequests * 100 / totalreq);
                                float cancelpercent = totalreq == 0 ? 0 : (a.CancelledRequests * 100 / totalreq);
                                float pendingpercent = totalreq == 0 ? 0 : (a.PendingRequests * 100 / totalreq);
                                float reshedulepercent = totalreq == 0 ? 0 : (a.RescheduledRequests * 100 / totalreq);
                               
                            }
                        <div class="progress mt-3" style="height: 0.4rem;">
                            @if (a.PendingRequests != 0)
                            {
                                <div class="progress-bar bg-secondary" role="progressbar" style="width: @pendingpercent%" aria-valuenow="@pendingpercent" aria-valuemin="0" aria-valuemax="100"></div>
                            }
                            @if (a.HandledRequests != 0)
                            {
                                <div class="progress-bar h-bg-green" role="progressbar" style="width: @handlepercent%" aria-valuenow="@handlepercent" aria-valuemin="0" aria-valuemax="100"></div>
                            }
                            @if (a.RescheduledRequests != 0)
                            {
                                <div class="progress-bar bg-info" role="progressbar" style="width: @reshedulepercent%" aria-valuenow="@reshedulepercent" aria-valuemin="0" aria-valuemax="100"></div>
                            }
                            @if (a.CancelledRequests != 0)
                            {
                                <div class="progress-bar bg-danger" role="progressbar" style="width: @cancelpercent%" aria-valuenow="@cancelpercent" aria-valuemin="0" aria-valuemax="100"></div>
                            }

                        </div>
                        </a>


                }
            }

        }
        else
        {
            <div class="card mb-2 pt-1 rounded-0 border-0 shadow-sm">
                <div class="card-body px-3 py-2 text-center">
                    <div class="row shimmer line" style="height: 38px;">

                    </div>
                    <div class="shimmer line" style="height: 0.4rem;"></div>
                </div>
            </div>
            <div class="card mb-2 pt-1 rounded-0 border-0 shadow-sm">
                <div class="card-body px-3 py-2 text-center">
                    <div class="row shimmer line" style="height: 38px;">

                    </div>
                    <div class="shimmer line" style="height: 0.4rem;"></div>
                </div>
            </div>
        }


    </div>
    </div>


    @code {

        private List<PickupSessionModel> model;

        protected async override void OnAfterRender(bool firstRender)
        {

            if (firstRender)
            {
                model = await http.GetFromJsonAsync<List<PickupSessionModel>>("api/GetPickupSessionsOfFranchise");
                StateHasChanged();
            }

        }

    }
