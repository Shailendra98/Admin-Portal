@inject HttpClient http
@if (model != null)
{
    <div class="mb-3 w-100">
        <h6 class="fw-bold text-secondary small ml-3">Pickup Session</h6>
        <div class="card p-2 rounded-0 border-0" style="box-shadow:0px 0px 10px rgba(209, 209, 209, 0.25);">
            @foreach (var a in model)
            {
                <div class="card mb-2 pt-1 rounded-0 border-0" style="box-shadow:0px 0px 10px rgba(209, 209, 209, 0.25);">
                    <div class="card-body px-3 py-2">
                        <div class="row">
                            <div class="col-2">
                                <h6 class="fw-bold text-secondary mb-0"> @a.VehicleName</h6>
                                <small> @a.VehicleNumber </small>
                            </div>
                            <div class="col-6 d-flex pt-2">
                                <div class="d-flex d-inline-block ps-2">
                                    <h6 class="fw-bold text-secondary"> @a.HandledRequests </h6>
                                    <small class="ps-1 text-secondary">Completed</small>
                                </div>
                                <div class="d-flex d-inline-block ps-2">
                                    <h6 class="fw-bold text-secondary"> @a.RescheduledRequests </h6>
                                    <small class="ps-1 text-secondary">Rescheduled</small>
                                </div>
                                <div class="d-flex d-inline-block ps-2">
                                    <h6 class="fw-bold text-secondary"> @a.CancelledRequests </h6>
                                    <small class="ps-1 text-secondary">Cancelled</small>
                                </div>
                                <div class="d-flex d-inline-block ps-2">
                                    <h6 class="fw-bold text-secondary"> @a.PendingRequests </h6>
                                    <small class="ps-1 text-secondary">Pending</small>
                                </div>
                            </div>
                            <div class="col-4 d-flex">
                                <div class="px-3">
                                    <h6 class="pt-2">₹ @a.Cash.ToString("G29")</h6>
                                </div>
                                <div class="d-flex d-inline-block">
                                    <small class="pt-2">@string.Join(", ", a.PickupBoys.Select(m => m.Name))</small>
                                </div>
                            </div>
                        </div>
                        @{
                            var totalreq = a.PendingRequests + a.HandledRequests + a.RescheduledRequests + a.CancelledRequests;
                            var handlepercent = totalreq == 0 ? 0 : (a.HandledRequests * 100 / totalreq);
                            var cancelpercent = totalreq == 0 ? 0 : (a.CancelledRequests * 100 / totalreq);
                            var pendingpercent = totalreq == 0 ? 0 : (a.PendingRequests * 100 / totalreq);
                            var reshedulepercent = totalreq == 0 ? 0 : (a.RescheduledRequests * 100 / totalreq);
                        }
                    <div class="progress" style="height: 0.4rem;">
                        @if (a.HandledRequests != 0)
                        {
                            <div class="progress-bar h-bg-green" role="progressbar" style="width: @handlepercent%" aria-valuenow="@handlepercent" aria-valuemin="0" aria-valuemax="100"></div>
                        }
                        @if (a.RescheduledRequests != 0)
                        {
                            <div class="progress-bar bg-info" role="progressbar" style="width: @reshedulepercent%" aria-valuenow="@reshedulepercent" aria-valuemin="0" aria-valuemax="100"></div>
                        }
                        @if (a.CancelledRequests != 0)
                        {
                    <div class="progress-bar bg-danger" role="progressbar" style="width: @cancelpercent%" aria-valuenow="@cancelpercent" aria-valuemin="0" aria-valuemax="100"></div>
                        }
                        @if (a.PendingRequests != 0)
                        {
                    <div class="progress-bar bg-secondary" role="progressbar" style="width: @pendingpercent%" aria-valuenow="@pendingpercent" aria-valuemin="0" aria-valuemax="100"></div>
                        }
                    </div>
                    </div>
                </div>
                            }
            @*<div class="d-flex d-inline-block justify-content-center">
                <span class="small text-secondary">View more...</span>
            </div>*@
        </div>
    </div>
    }


@code {

    private List<PickupSessionModel> model;

    protected async override void OnAfterRender(bool firstRender)
    {
        model = await http.GetFromJsonAsync<List<PickupSessionModel>>("api/GetPickupSessionsOfFranchise");
        base.OnAfterRender(firstRender);
        StateHasChanged();
    }

}
