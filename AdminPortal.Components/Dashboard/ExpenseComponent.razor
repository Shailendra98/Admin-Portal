@using ChartJs.Blazor.PieChart
@using System.Drawing
@using TKW.AdminPortal.Components.SharedComponents
@using AdminPortal.Shared.Models
@inject HttpClient http

@if (model != null) {
    <div class="mb-3">
    <small class="fw-bold text-secondary">Expenses</small>
    <div class="card rounded-0 border-0 shadow-sm mt-2">
        <div class="card-body">
                    <div class="position-relative">
                        <Chart Config="_config"></Chart>
                        <div class="position-absolute" style="top: 35%; left: 34%; transform: translate(-50%, 50%);">
                                <span class="fw-bold text-secondary h4">₹ 789 </span>
                        </div>
                    </div>
            </div>
        </div>
    </div>

}

@code {
    private ExpenseDetailsList model;
    private ExpenseModel model2;
    private PieConfig _config;

    protected async override void OnAfterRender(bool firstRender)
    {
        model = await http.GetFromJsonAsync<ExpenseDetailsList>("api/GetExpenseDetailsList");
        if (firstRender)
        {
            base.OnAfterRender(firstRender);
            await LoadChartData();
            StateHasChanged();
        }

    }

    private async Task LoadChartData()
    {

        _config = new PieConfig(true)
        {


            Options = new PieOptions
            {
                Responsive = true,
                CutoutPercentage = 75,
                Legend = new Legend
                {
                    Display = true,
                    Position = Position.Right
                },

                Title = new ChartJs.Blazor.Common.OptionsTitle
                {
                    Display = false,
                }


            }
        };

        foreach (string color in new[] { "Stationary", "Paper", "Newspaper" })
        {
            _config.Data.Labels.Add(color);
        }

        PieDataset<int> dataset = new PieDataset<int>(new[] { 3, 4, 7 })
        {
            BackgroundColor = new[]
            {
            ColorUtil.ColorString(92, 198, 65, 1), // Slice 1 aka "Red"
            ColorUtil.ColorString(92, 198, 65, 0.1), // Slice 2 aka "Yellow"
            ColorUtil.ColorString(92, 198, 65, 0.5), // Slice 3 aka "Green"

            }
        };

        _config.Data.Datasets.Add(dataset);
    }
    }

