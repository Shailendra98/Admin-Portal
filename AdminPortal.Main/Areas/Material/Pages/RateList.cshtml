@page
@using TKW.AdminPortal.Areas.Material.ViewModels
@model TKW.AdminPortal.Areas.Material.Pages.RateListModel
@{
    ViewBag.Title = "Rate list";
}
<pagetitle title="Rate List" description="Edit rates of pickup materials"></pagetitle>
<div class="content">
    @if (!Model.IsFranchise)
    {
        @await Component.InvokeAsync("SelectFranchise")
    }
    else
    {
        <div class=" row justify-content-center">
            <div class="col-md-12">
                <div class="row justify-content-center mt-2">
                    <div class="col-md-12">
                        <div class="hpanel ">
                            <div class="panel-body">
                                <div class="row">
                                    <span class="input-group col">
                                        <input class="form-control" type="text" placeholder="Search Materials" id="searchMaterials" />
                                        <button class="btn btn-default  ">
                                            <i class="fa fa-search"></i>
                                        </button>
                                    </span>
                                    <span class="input-group col">
                                        <span class="col m-auto text-left form-check form-switch d-flex justify-content-end ">

                                            <input class="visibility-checkbox form-check-input me-2 " type="checkbox" name="UserRateList" value="true" id="UserRateList" />
                                            <label class="form-check-label fs-6" for="UserRateList">User Rate List</label>

                                        </span>
                                        <span class="col m-auto text-left form-check form-switch d-flex justify-content-center">
                                            <input class="visibility-checkbox form-check-input me-2 " type="checkbox" name="PickupExecutiveRateList" value="true" id="PickupExecutiveRateList" />
                                            <label class="form-check-label fs-6" for="PickupExecutiveRateList">Pickup executive Rate List</label>
                                        </span>

                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="searchbox">
                    <div class="d-flex flex-wrap justify-content-start mx-n2">
                        @foreach (var material in Model.Materials)
                        {
                            var rate = Model.MaterialRates.FirstOrDefault(m => m.Id == material.Id);
                            var materialInfo = new PurchaseMaterialUpdateModel
                            {
                                PurchaseMaterialId = material.Id,
                                PurchaseMaterialName = material.Name,
                                Rate = rate?.Rate,
                                MinRate = rate?.MinRate,
                                MaxRate = rate?.MaxRate,
                                IncludeInPickupExecutiveRateList = rate?.IncludeInPickupExecutiveRateList ?? false,
                                IncludeInSellerRateList = rate?.IncludeInSellerRateList ?? false,
                                Unit = rate?.UnitName ?? ""
                            };
                            <a class="text-decoration-none text-dark item card m-2 




" style="max-width: calc(33.33% - 1rem); min-width: 22rem;" data-bs-toggle="modal" data-bs-target="#ActionModal" data-load-url="@Url.Page("Ajax/Modal/UpdateRateList", materialInfo)">
                                <div class="card-body">
                                    <h6>
                                         <strong class="title-text">@material.Name</strong>
                                    </h6>
                                    @if (rate == null)
                                    {
                                        <div class="text-center py-3 no-rate">
                                            <em>There is no rate for this material.</em>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="row pt-1">
                                            <div class="col-6">
                                                Rates:
                                                <span class="ps-1">₹</span>
                                                <span class="fs-6 "><strong>@(rate==null ?"Rate":rate.Rate.ToString("G29"))</strong></span>
                                                <small>/@material.UnitName</small>
                                                <div class="card-text">
                                                    Range:
                                                    <span>₹</span>
                                                    <span><strong>@(rate == null ? "Rate" :rate.MinRate.ToString("G29"))</strong></span>
                                                    
                                                    <strong>-</strong>
                                                    <span><strong>@(rate==null ? "Rate" :rate.MaxRate.ToString("G29"))</strong></span>
                                                    <small>/@material.UnitName</small>
                                                </div>
                                            </div>
                                            <div class="col-6 visibility-box pe-0">
                                                <div class=" user-visibility ">
                                                    <span>
                                                        <i class="fa @(rate.IncludeInSellerRateList == true ? "fa-check text-success" : "fa-close text-danger" ) "></i>
                                                    </span>
                                                    <span class="ps-1">Seller rate list</span>
                                                </div>
                                                <div class=" pickup-visibility pt-1">
                                                    <span>
                                                        <i class="fa @(rate.IncludeInPickupExecutiveRateList == true ? "fa-check text-success" : "fa-close text-danger" ) "></i>
                                                    </span>
                                                    <span class="ps-1"> Pickup executive rate list</span>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>
@section Styles{
<link href="~/css/bootstrap-checkbox.min.css" asp-append-version="true" rel="stylesheet" />
<style>
    .form-check-input:checked {
        background-color: #198754;
        border-color: #198754;
    }

    .form-check-input {
        height: 1rem;
        width: 2rem;
    }
</style>
}
@section Scripts{
<script src="~/js/searchelem.min.js"></script>
<script>
    $(function () {
        $('.visibility-checkbox').on('change', function () {
            var form = $(this).closest('form');
            var button = form.find("button");
            button.removeAttr('disabled');
            if (button.data('state') == "1") {
                $(this).parents('tr').find('.updatebtn').html('Update').removeClass('btn-success').removeClass('btn-danger').addClass('btn-default').removeAttr('disabled');
                $(this).data('state', '0');
            }
        });
        $('.rate-input input').on('keyup', function () {
            var form = $(this).closest('form');
            var min = parseFloat(form.find("input.min").val());
            var defaultvalue = parseFloat(form.find("input.defaultvalue").val());
            var max = parseFloat(form.find("input.max").val());
            var button = form.find("button");
            if (isNaN(min) || isNaN(max) || isNaN(defaultvalue) || min > defaultvalue || defaultvalue > max) {
                button.attr('disabled', '');
            }
            else {
                button.removeAttr('disabled');
            }
            if (button.data('state') == "1") {
                $(this).parents('tr').find('.updatebtn').html('Update').removeClass('btn-success').removeClass('btn-danger').addClass('btn-default').removeAttr('disabled');
                $(this).data('state', '0');
            }
        });
        $("#searchMaterials").SearchElem("#searchbox .item", [{ elem: "h6", type: "text" }], { numberOfResult: 0 });
    });


        const USER_FILTER =  document.getElementById("UserRateList");
        const CARDS = document.querySelectorAll(".item");

         USER_FILTER.addEventListener("change", function(){

            if(USER_FILTER.checked == true)
            {
                CARDS.forEach(function(card){
                    const USER_FLAG = card.querySelector('.visibility-box .user-visibility .fa-close');
                    const NO_RATE = card.querySelector('.card-body .no-rate')
                    if(USER_FLAG != undefined)
                    {
                       card.style.display = 'none';
                    }
                    if(NO_RATE != undefined)
                    {
                        card.style.display = 'none';
                    }
                });
            }
             if(USER_FILTER.checked == false)
            {
                CARDS.forEach(function(card){
                    const USER_FLAG = card.querySelector('.visibility-box .user-visibility .fa-check');
                      card.style.display = 'inline-block';
                });
            }
        });

        const PICKUP_EXECUTIVE_FILTER =  document.getElementById("PickupExecutiveRateList");

         PICKUP_EXECUTIVE_FILTER.addEventListener("change", function(){
            if(PICKUP_EXECUTIVE_FILTER.checked == true)
            {
                CARDS.forEach(function(card){
                    const PICKUP_EXECUTIVE_FLAG = card.querySelector('.visibility-box .pickup-visibility .fa-close');
                    const NO_RATE = card.querySelector('.card-body .no-rate');
                    if(PICKUP_EXECUTIVE_FLAG != undefined)
                    {
                       card.style.display = 'none';
                    }
                    if(NO_RATE != undefined)
                    {
                        card.style.display = 'none';
                    }
                });
            }
             if(PICKUP_EXECUTIVE_FILTER.checked == false)
            {
                CARDS.forEach(function(card){
                    const PICKUP_EXECUTIVE_FLAG = card.querySelector('.visibility-box .pickup-visibility .fa-check');
                        card.style.display = 'inline-block';
                });
            }
        });

</script>
}
<modal id="ActionModal" content-id="ActionModalContent" loader="true"></modal>